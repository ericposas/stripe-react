[{"C:\\Users\\EP\\Documents\\stripe-react\\src\\index.js":"1","C:\\Users\\EP\\Documents\\stripe-react\\src\\App.js":"2","C:\\Users\\EP\\Documents\\stripe-react\\src\\reportWebVitals.js":"3","C:\\Users\\EP\\Documents\\stripe-react\\src\\itemsList.js":"4","C:\\Users\\EP\\Documents\\stripe-react\\src\\productsList.js":"5","C:\\Users\\EP\\Documents\\stripe-react\\src\\Success.js":"6","C:\\Users\\EP\\Documents\\stripe-react\\src\\components\\StyledButton.js":"7","C:\\Users\\EP\\Documents\\stripe-react\\src\\components\\ProductBox.js":"8","C:\\Users\\EP\\Documents\\stripe-react\\src\\components\\Checkout.js":"9","C:\\Users\\EP\\Documents\\stripe-react\\src\\hooks\\useFetchedUserData.js":"10","C:\\Users\\EP\\Documents\\stripe-react\\src\\utils\\utils.js":"11","C:\\Users\\EP\\Documents\\stripe-react\\src\\components\\UpdateUserDataForm.js":"12","C:\\Users\\EP\\Documents\\stripe-react\\src\\hooks\\useAuthToken.js":"13","C:\\Users\\EP\\Documents\\stripe-react\\src\\components\\DrawerComponent.js":"14","C:\\Users\\EP\\Documents\\stripe-react\\src\\components\\ActionModal.js":"15","C:\\Users\\EP\\Documents\\stripe-react\\src\\components\\AppHeader.js":"16","C:\\Users\\EP\\Documents\\stripe-react\\src\\components\\ProfileDataPage.js":"17","C:\\Users\\EP\\Documents\\stripe-react\\src\\components\\BugerButton.js":"18","C:\\Users\\EP\\Documents\\stripe-react\\src\\components\\LogoutTimer.js":"19","C:\\Users\\EP\\Documents\\stripe-react\\src\\components\\CreditCardEntry.js":"20","C:\\Users\\EP\\Documents\\stripe-react\\src\\hooks\\useCreateStripeCustomer.js":"21","C:\\Users\\EP\\Documents\\stripe-react\\src\\components\\StripeCardEntryExample.js":"22","C:\\Users\\EP\\Documents\\stripe-react\\src\\components\\ChoosePaymentMethod.js":"23"},{"size":735,"mtime":1611682596830,"results":"24","hashOfConfig":"25"},{"size":4271,"mtime":1611990275377,"results":"26","hashOfConfig":"25"},{"size":362,"mtime":499162500000,"results":"27","hashOfConfig":"25"},{"size":2537,"mtime":1611467539130,"results":"28","hashOfConfig":"25"},{"size":57,"mtime":1611472459384,"results":"29","hashOfConfig":"25"},{"size":4480,"mtime":1611855402264,"results":"30","hashOfConfig":"25"},{"size":696,"mtime":1611984072974,"results":"31","hashOfConfig":"25"},{"size":1677,"mtime":1611626131223,"results":"32","hashOfConfig":"25"},{"size":3484,"mtime":1611986781728,"results":"33","hashOfConfig":"25"},{"size":1206,"mtime":1611983601331,"results":"34","hashOfConfig":"25"},{"size":410,"mtime":1611990882258,"results":"35","hashOfConfig":"25"},{"size":10388,"mtime":1611984072975,"results":"36","hashOfConfig":"25"},{"size":1472,"mtime":1611984245728,"results":"37","hashOfConfig":"25"},{"size":4136,"mtime":1611984072971,"results":"38","hashOfConfig":"25"},{"size":1983,"mtime":1611820426087,"results":"39","hashOfConfig":"25"},{"size":1024,"mtime":1611984072970,"results":"40","hashOfConfig":"25"},{"size":1957,"mtime":1611986035344,"results":"41","hashOfConfig":"25"},{"size":294,"mtime":1611807335603,"results":"42","hashOfConfig":"25"},{"size":2156,"mtime":1611854844319,"results":"43","hashOfConfig":"25"},{"size":2424,"mtime":1611860900891,"results":"44","hashOfConfig":"25"},{"size":2504,"mtime":1611984203856,"results":"45","hashOfConfig":"25"},{"size":15681,"mtime":1611993156596,"results":"46","hashOfConfig":"25"},{"size":865,"mtime":1611990309739,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1d30jjv",{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"50"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"59"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"50"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"50"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"C:\\Users\\EP\\Documents\\stripe-react\\src\\index.js",[],["110","111"],"C:\\Users\\EP\\Documents\\stripe-react\\src\\App.js",["112"],"import React from 'react'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from 'react-router-dom'\r\nimport './App.css'\r\nimport SuccessPage from './Success'\r\nimport { useAuth0 } from '@auth0/auth0-react'\r\nimport Checkout from './components/Checkout'\r\nimport UpdateUserDataForm from './components/UpdateUserDataForm'\r\nimport ChoosePaymentMethod from './components/ChoosePaymentMethod'\r\nimport { DarkenDiv, DrawerLeftPanel } from './components/DrawerComponent'\r\nimport { ActionModal } from './components/ActionModal'\r\nimport AppHeader from './components/AppHeader'\r\nimport ProfileDataPage from './components/ProfileDataPage'\r\nimport BurgerButton from './components/BugerButton'\r\nimport LogoutTimer from './components/LogoutTimer'\r\nimport { Elements } from '@stripe/react-stripe-js'\r\nimport { loadStripe } from '@stripe/stripe-js'\r\nimport StripeCardEntryExample from './components/StripeCardEntryExample'\r\n\r\nconst stripePromise = loadStripe(process.env.REACT_APP_STRIPE_TEST_PUB_KEY)\r\n\r\nfunction App() {\r\n  \r\n  const { user } = useAuth0()\r\n  const [drawerOpen, setDrawerOpen] = React.useState(false)\r\n  const [updatedProfile, setUpdatedProfile] = React.useState(false)\r\n\r\n  return (\r\n    <>\r\n      <div className='App'>\r\n\r\n        <LogoutTimer minutesOfInactivity={15} />\r\n\r\n        <Router>\r\n\r\n          {\r\n            user && <BurgerButton doAction={() => setDrawerOpen(true)} />\r\n          }\r\n\r\n          <Link to='/' style={{ textDecoration: 'none' }}>\r\n            <AppHeader />\r\n          </Link>\r\n\r\n          <DarkenDiv drawerOpen={drawerOpen} setDrawerOpen={setDrawerOpen} />\r\n          <DrawerLeftPanel updatedProfile={updatedProfile} drawerOpen={drawerOpen} setDrawerOpen={setDrawerOpen} />\r\n          \r\n          <ActionModal\r\n          queryTerm={'paymentMethodSetup'}\r\n          msg={'Payment method saved!'}\r\n          redirectPath={'/'}\r\n          timeout={3000}\r\n          delayBeforeLeave={2750}\r\n          doAction={() => {\r\n            setDrawerOpen(false)\r\n          }}\r\n          />\r\n\r\n          <ActionModal\r\n          queryTerm={'profileSetup'}\r\n          msg={'Thank you for completing your profile!'}\r\n          redirectPath={'/'}\r\n          timeout={3000}\r\n          delayBeforeLeave={2750}\r\n          doAction={() => {\r\n            setDrawerOpen(false)\r\n          }}\r\n          />\r\n          \r\n          <ActionModal\r\n          queryTerm={'updateInfo'}\r\n          msg={'You have successfully updated your profile info!'}\r\n          redirectPath={'/'}\r\n          timeout={3000}\r\n          delayBeforeLeave={2750}\r\n          doAction={() => {\r\n            setDrawerOpen(false)\r\n          }}\r\n          />\r\n\r\n          <div>\r\n            <Switch>\r\n              \r\n              <Route exact path='/'>\r\n                <ProfileDataPage />\r\n              </Route>\r\n              \r\n              <Route path='/success'>\r\n                <SuccessPage />\r\n              </Route>\r\n              \r\n              {/* <Route path='/checkout'>\r\n                <Checkout />\r\n              </Route> */}\r\n\r\n              <Route path='/checkout-payment-method'>\r\n                <ChoosePaymentMethod />\r\n                <div>Huh</div>\r\n              </Route>\r\n              \r\n\r\n              <Route path='/checkout-review'>\r\n\r\n              </Route>\r\n\r\n              <Route path='/checkout-success'>\r\n\r\n              </Route>\r\n\r\n              <Route path='/setup-payment-method'>\r\n                <Elements stripe={stripePromise}>\r\n                  <StripeCardEntryExample />\r\n                </Elements>\r\n              </Route>\r\n\r\n              <Route path='/update-profile'>\r\n                <br />\r\n                <div>Update your info</div>\r\n                <br />\r\n                <UpdateUserDataForm\r\n                user={user}\r\n                setUpdatedProfile={setUpdatedProfile}\r\n                extraActionFn={() => {\r\n                  setDrawerOpen(false)\r\n                }}\r\n                onCompleteParams={{\r\n                  queryKey: 'updateInfo',\r\n                  queryValue: 'complete'\r\n                }}\r\n                submitLabel={ 'Update info' }\r\n                />\r\n              </Route>\r\n\r\n            </Switch>\r\n          </div>\r\n\r\n        </Router>\r\n      </div>\r\n    </>\r\n  )\r\n\r\n}\r\n\r\nexport default App","C:\\Users\\EP\\Documents\\stripe-react\\src\\reportWebVitals.js",[],"C:\\Users\\EP\\Documents\\stripe-react\\src\\itemsList.js",["113"],"export default () => ([\r\n    {\r\n        price_data: {\r\n            currency: 'usd',\r\n            product_data: {\r\n                name: 'Gummy Bears'\r\n            },\r\n            unit_amount: 100\r\n        },\r\n        quantity: 1\r\n    },\r\n    {\r\n        price_data: {\r\n            currency: 'usd',\r\n            product_data: {\r\n                name: 'Camisa'\r\n            },\r\n            unit_amount: 2500\r\n        },\r\n        quantity: 1\r\n    },\r\n    {\r\n        price_data: {\r\n            currency: 'usd',\r\n            product_data: {\r\n                name: 'Shirt'\r\n            },\r\n            unit_amount: 2000\r\n        },\r\n        quantity: 1\r\n    },\r\n    {\r\n        price_data: {\r\n            currency: 'usd',\r\n            product_data: {\r\n                name: 'Pants'\r\n            },\r\n            unit_amount: 3500\r\n        },\r\n        quantity: 1\r\n    },\r\n    {\r\n        price_data: {\r\n            currency: 'usd',\r\n            product_data: {\r\n                name: 'Shoes'\r\n            },\r\n            unit_amount: 7500\r\n        },\r\n        quantity: 1\r\n    },\r\n    {\r\n        price_data: {\r\n            currency: 'usd',\r\n            product_data: {\r\n                name: 'Jacket'\r\n            },\r\n            unit_amount: 18500\r\n        },\r\n        quantity: 1\r\n    },\r\n    {\r\n        price_data: {\r\n            currency: 'usd',\r\n            product_data: {\r\n                name: 'Flops'\r\n            },\r\n            unit_amount: 1000\r\n        },\r\n        quantity: 1\r\n    },\r\n    {\r\n        price_data: {\r\n            currency: 'usd',\r\n            product_data: {\r\n                name: 'Hat'\r\n            },\r\n            unit_amount: 1500\r\n        },\r\n        quantity: 1\r\n    },\r\n    {\r\n        price_data: {\r\n            currency: 'usd',\r\n            product_data: {\r\n                name: 'Suit'\r\n            },\r\n            unit_amount: 25500\r\n        },\r\n        quantity: 1\r\n    },\r\n    {\r\n        price_data: {\r\n            currency: 'usd',\r\n            product_data: {\r\n                name: 'Tie'\r\n            },\r\n            unit_amount: 4000\r\n        },\r\n        quantity: 1\r\n    },\r\n    {\r\n        price_data: {\r\n            currency: 'usd',\r\n            product_data: {\r\n                name: 'Dress Shoes'\r\n            },\r\n            unit_amount: 12000\r\n        },\r\n        quantity: 1\r\n    },\r\n    {\r\n        price_data: {\r\n            currency: 'usd',\r\n            product_data: {\r\n                name: 'Nikes'\r\n            },\r\n            unit_amount: 35500\r\n        },\r\n        quantity: 1\r\n    },\r\n])\r\n",["114","115"],"C:\\Users\\EP\\Documents\\stripe-react\\src\\productsList.js",["116"],"export default () => ([\r\n    'prod_IofQI7lk3rL1Qq',\r\n])\r\n","C:\\Users\\EP\\Documents\\stripe-react\\src\\Success.js",["117","118"],"import React from 'react'\r\nimport { useLocation, useHistory } from 'react-router-dom'\r\nimport { useAuth0 } from '@auth0/auth0-react'\r\nimport UpdateUserDataForm from './components/UpdateUserDataForm'\r\nimport useAuthToken from './hooks/useAuthToken'\r\nimport useFetchedUserData from './hooks/useFetchedUserData'\r\n\r\nfunction usePatchStripeSessionData (stripeSession) {\r\n\r\n    const [res, setRes] = React.useState(null)\r\n    const jwt = useAuthToken()\r\n    const user = useFetchedUserData()\r\n\r\n    React.useEffect(() => {\r\n\r\n        if (user && jwt && stripeSession) {\r\n            let status, statusCode\r\n            let subscriptions =\r\n                user.user_metadata?.subscriptions ? user.user_metadata.subscriptions.push(stripeSession.subscription)\r\n                : [ stripeSession.subscription ]\r\n            fetch(`https://gymwebapp.us.auth0.com/api/v2/users/${user.user_id}`, {\r\n                method: 'PATCH',\r\n                body: JSON.stringify({\r\n                    user_metadata: {\r\n                        stripe: {\r\n                            customer: user.user_metadata?.customer ? user.user_metadata.customer : stripeSession.customer,\r\n                            subscriptions: subscriptions !== user.user_metadata.subscriptions ? subscriptions : user.user_metadata.subscriptions\r\n                        }\r\n                    }\r\n                }),\r\n                headers: {\r\n                    'content-type': 'application/json',\r\n                    'authorization': `Bearer ${jwt.access_token}`\r\n                }\r\n            })\r\n            .then(response => {\r\n                status = response.status\r\n                return response.json()\r\n            })\r\n            .then(data => {\r\n                console.log(data)\r\n                setRes(data)\r\n                statusCode = data.statusCode ? data.statusCode : null\r\n                // setTimeout(() => {\r\n                //     history.push(`/?${queryKey}=${queryValue}`)\r\n                // }, 250)\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n                if (status === 401  || statusCode === 401) {\r\n                    if (localStorage.getItem('gym-app-jwt')) {\r\n                        localStorage.removeItem('gym-app-jwt')\r\n                    }\r\n                }\r\n            })\r\n        }\r\n\r\n    }, [user, jwt, stripeSession])\r\n\r\n    return res\r\n\r\n}\r\n\r\nexport default function SuccessPage () {\r\n\r\n    const location = useLocation()\r\n    const history = useHistory()\r\n    const { isLoading, isAuthenticated, user } = useAuth0()\r\n    const [stripeSession, setStripeSession] = React.useState(null)\r\n    usePatchStripeSessionData(stripeSession)\r\n\r\n    React.useEffect(() => {\r\n        console.log(\r\n            stripeSession\r\n        )\r\n    }, [stripeSession])\r\n\r\n    React.useEffect(() => {\r\n        // get session data to populate form fields\r\n        let session_id\r\n        if (location.search) {\r\n            session_id = location.search.split('=')[1]\r\n        }\r\n        if (session_id) {\r\n            if (isAuthenticated === true) {\r\n                // get stripe customer data \r\n                let data = fetch('/get-checkout-session', {\r\n                    method: 'POST',\r\n                    body: JSON.stringify({ session_id }),\r\n                        headers: { 'Content-type': 'application/json' }\r\n                })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    let { session } = data\r\n                    setStripeSession(session)\r\n                })\r\n                .catch(err => console.log(err))\r\n            }\r\n        } else {\r\n            // redirect to home\r\n            history.push('/')\r\n        }\r\n\r\n    }, [ isAuthenticated ])\r\n\r\n    const markup = () => (\r\n        <>\r\n            <br />\r\n            <div>\r\n                Payment was successful! Please finish setting up your profile\r\n            </div>\r\n            <br />\r\n            <UpdateUserDataForm\r\n            user={user}\r\n            onCompleteParams={{\r\n                queryKey: 'profileSetup',\r\n                queryValue: 'complete',\r\n            }}\r\n            submitLabel={ 'Complete Enrollment' }\r\n            />\r\n        </>\r\n    )\r\n\r\n    return (\r\n        <>\r\n        {\r\n            isLoading\r\n            ? <><br /><div>Loading...</div></>\r\n            :\r\n                isAuthenticated\r\n                ? markup()\r\n                : null\r\n        }\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\EP\\Documents\\stripe-react\\src\\components\\StyledButton.js",[],"C:\\Users\\EP\\Documents\\stripe-react\\src\\components\\ProductBox.js",["119","120"],"import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledProductBoxDiv = styled.div`\r\nuser-select: none;\r\nalign-items: center;\r\nborder: 2px solid slateblue;\r\ncolor: darkslateblue;\r\nborder-radius: 3px;\r\npadding: 20px;\r\nwidth: 300px;\r\nposition: absolute;\r\nmargin: auto;\r\nleft: 0;\r\nright: 0;\r\ntransform: scale(1.00);\r\ntransition: all .35s;\r\ncursor: pointer;\r\n&:hover {\r\n    transform: scale(1.05);\r\n    transition: all .35s;\r\n}\r\n`\r\n\r\nexport const convertToDollar = priceNum => {\r\n    let amt = priceNum.toString()\r\n    let dollarAmt = amt.split('')\r\n    dollarAmt.pop()\r\n    dollarAmt.pop()\r\n    dollarAmt.push('.00')\r\n    dollarAmt = dollarAmt.join('')\r\n    return dollarAmt\r\n}\r\n\r\nexport default ({ product, itemsChecked, updateCart }) => (\r\n    <>\r\n        <StyledProductBoxDiv\r\n        onClick={() => { updateCart(product) }}\r\n        >\r\n            <span>\r\n                <div key={product.id}>\r\n                { product.name }\r\n                </div>\r\n                <div>\r\n                { product.statement_descriptor }\r\n                </div>\r\n                <div>\r\n                ${ convertToDollar( product.metadata.price ) }\r\n                </div>\r\n                <input\r\n                style={{\r\n                    position: 'relative',\r\n                    right: '20px'\r\n                }}\r\n                type='checkbox'\r\n                checked={itemsChecked[product.id]}\r\n                onChange={() => { updateCart(product) }}\r\n                />\r\n            </span>\r\n            <img\r\n            style={{ 'width': '100px' }}\r\n            src={ product.images[0] }\r\n            />\r\n        </StyledProductBoxDiv>\r\n    </>\r\n)","C:\\Users\\EP\\Documents\\stripe-react\\src\\components\\Checkout.js",["121","122"],"import React from 'react'\r\nimport { isEqual } from 'lodash'\r\nimport { loadStripe } from '@stripe/stripe-js'\r\nimport StyledButton from './StyledButton'\r\nimport ProductBox from './ProductBox'\r\nimport { useAuth0 } from '@auth0/auth0-react'\r\nimport useFetchedUserData from '../hooks/useFetchedUserData'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst stripePromise = loadStripe(process.env.REACT_APP_STRIPE_TEST_PUB_KEY)\r\n\r\nexport default function Checkout () {\r\n\r\n    const [products, setProducts] = React.useState(null)\r\n    const [itemsChecked, setItemsChecked] = React.useState({})\r\n    const [shoppingCart, setShoppingCart] = React.useState([])\r\n    const { isAuthenticated, isLoading } = useAuth0()\r\n    const fetchedUser = useFetchedUserData()\r\n    const history = useHistory()\r\n\r\n    React.useEffect(() => {\r\n  \r\n      let response = fetch('/get-list-of-products', {\r\n        method: 'GET'\r\n      })\r\n      .then(response => response.json())\r\n      .catch(err => console.log(err))\r\n      \r\n      response\r\n      .then(data => {\r\n        setProducts(data.products)\r\n      })\r\n      .catch(err => console.log(err))\r\n  \r\n    }, [])\r\n  \r\n    const handleClick = async event => {\r\n      if (!fetchedUser) {\r\n        console.log(\r\n          'could not get auth0 fetched user object'\r\n        )\r\n        return\r\n      }\r\n      if (fetchedUser && shoppingCart.length > 0) {\r\n        // next step, choose existing customer payment method\r\n        history.push('/checkout/payment-method')\r\n\r\n      } else {\r\n        console.log(\r\n          'there is nothing in your shopping cart'\r\n        )\r\n      }\r\n  \r\n    }\r\n  \r\n    const updateCart = product => {\r\n      setItemsChecked({\r\n        [product.id]: !itemsChecked[product.id]\r\n      })\r\n  \r\n      let inCart = false\r\n      let itemToAdd = { price: product.metadata.price_id, quantity: 1 }\r\n      shoppingCart.forEach(item => {\r\n        if (isEqual(item, itemToAdd)) {\r\n          inCart = true\r\n        }\r\n      })\r\n  \r\n      if (!inCart) {\r\n        setShoppingCart(() => ([\r\n          ...shoppingCart,\r\n          itemToAdd\r\n        ]))\r\n      } else {\r\n        setShoppingCart(() => (\r\n          shoppingCart.filter(item => {\r\n            if (!isEqual(item, itemToAdd)) {\r\n              return item\r\n            }\r\n          })\r\n        ))\r\n      }\r\n  \r\n    }\r\n\r\n    const markup = () => (\r\n        <>\r\n        <br />\r\n        <div>\r\n          Enroll in Classes\r\n        </div>\r\n        <br />\r\n        <div>\r\n          {\r\n            products ?\r\n            products\r\n            .map(product => (\r\n              <ProductBox\r\n              itemsChecked={itemsChecked}\r\n              updateCart={updateCart}\r\n              product={product}\r\n              />\r\n            ))\r\n            : null\r\n          }\r\n        </div>\r\n        <br />\r\n        <div\r\n          style={{\r\n            left: 0,\r\n            right: 0,\r\n            bottom: '40px',\r\n            position: 'absolute',\r\n            margin: 'auto'\r\n          }}\r\n        >\r\n          <StyledButton\r\n          type='button' role='link'\r\n          onClick={handleClick}>\r\n            Next\r\n          </StyledButton>\r\n          <div>\r\n            (choose payment method)\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n    \r\n    return (\r\n        <>\r\n        {\r\n            isLoading\r\n            ? <><br/><div>Loading...</div></>\r\n            :\r\n                isAuthenticated\r\n                ? markup()\r\n                : null\r\n        }\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\EP\\Documents\\stripe-react\\src\\hooks\\useFetchedUserData.js",[],"C:\\Users\\EP\\Documents\\stripe-react\\src\\utils\\utils.js",[],["123","124"],"C:\\Users\\EP\\Documents\\stripe-react\\src\\components\\UpdateUserDataForm.js",[],"C:\\Users\\EP\\Documents\\stripe-react\\src\\hooks\\useAuthToken.js",["125"],"import React from 'react'\r\nimport { useAuth0 } from '@auth0/auth0-react'\r\n\r\nexport default function useAuthToken () {\r\n\r\n    const [jwt, setJwt] = React.useState(null)\r\n    const { isAuthenticated } = useAuth0()\r\n\r\n    React.useEffect(() => {\r\n        console.log(\r\n        'user auth: ', isAuthenticated\r\n        )\r\n        if (isAuthenticated === true) {\r\n            if (window.localStorage && !localStorage.getItem('gym-app-jwt')) {\r\n                fetch('/retrieve-api-token', {\r\n                    method: 'POST',\r\n                    headers: { 'Content-type': 'application/json' }\r\n                })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    setJwt(data)\r\n                    localStorage.setItem('gym-app-jwt', JSON.stringify(data))\r\n                    // we will update this to send the jwt to our mongo db for better security...\r\n                    // we will then need to blacklist or invalidate old jwt tokens as well\r\n                    // but for now, let's make a request using the jwt! (at Success component)\r\n                    // request will be PATCH to update user \r\n                })\r\n                .catch(err => console.log(err))\r\n            } else {\r\n                console.log(jwt)\r\n                setJwt(JSON.parse(localStorage.getItem('gym-app-jwt')))\r\n            }\r\n        }\r\n\r\n    }, [isAuthenticated])\r\n\r\n    return jwt\r\n\r\n}","C:\\Users\\EP\\Documents\\stripe-react\\src\\components\\DrawerComponent.js",["126","127"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport useFetchedUserData from '../hooks/useFetchedUserData'\r\n// import useFetchedUserData from '../hooks/useFetchedUserData'\r\nimport StyledButton, { GreyedOutButton } from './StyledButton'\r\n\r\nfunction DrawerLeftPanel ({ updatedProfile, drawerOpen, setDrawerOpen }) {\r\n  \r\n  const fetchedUser = useFetchedUserData()\r\n  // const [fetchedUserUpdated, setFetchedUserUpdated] = React.useState(false)\r\n\r\n  // const shouldRenderEnrollButton = () => {\r\n  //   if (\r\n  //     fetchedUser && fetchedUser.given_name && fetchedUser.family_name &&\r\n  //     (fetchedUser.user_metadata?.mobile ? fetchedUser.user_metadata.mobile : null)\r\n  //     ) {\r\n  //     return true\r\n  //   }\r\n  //   return false\r\n  // }\r\n\r\n  // React.useEffect(() => {\r\n    \r\n  //   setFetchedUserUpdated(\r\n  //     shouldRenderEnrollButton()\r\n  //   )\r\n\r\n  // }, [fetchedUser])\r\n\r\n  return (\r\n    <>\r\n    {\r\n      drawerOpen ?\r\n      <div\r\n        className={'SidePanel_container'}\r\n        style={{\r\n          width: '300px',\r\n          height: '100vh',\r\n          position: 'absolute',\r\n          left: 0, top: 0,\r\n          color: 'white',\r\n          zIndex: 100,\r\n          backgroundColor: 'white',\r\n          boxShadow: '1px 1px 2px 2px rgba(0, 0, 0, 0.2)'\r\n        }}\r\n        >\r\n          <StyledButton\r\n          onClick={() => setDrawerOpen(false)}\r\n          style={{ position: 'absolute', right: '10px', top: '10px', width: '50px', backgroundColor: 'royalblue', border: '1px solid darkblue' }}\r\n          >\r\n            &#8678;\r\n          </StyledButton>\r\n          <h4\r\n          style={{\r\n            margin: 0,\r\n            padding: '25px 0 25px 0',\r\n            backgroundColor: 'royalblue',\r\n          }}\r\n          >\r\n            Account\r\n          </h4>\r\n\r\n          <br />\r\n          <Link to='/'>\r\n            <StyledButton\r\n              onClick={() => setDrawerOpen(false)}\r\n              style={{ backgroundColor: 'royalblue' }}\r\n            >\r\n              Profile Info\r\n            </StyledButton>\r\n          </Link>\r\n          <br />\r\n          \r\n          <br />\r\n          <Link to='/update-profile'>\r\n            <StyledButton\r\n            onClick={() => setDrawerOpen(false)}\r\n            style={{ backgroundColor: 'royalblue' }}\r\n            >\r\n              Update profile info\r\n            </StyledButton>\r\n          </Link>\r\n          <br />\r\n\r\n          <br />\r\n          <Link to='/setup-payment-method'>\r\n            <StyledButton\r\n            onClick={() => setDrawerOpen(false)}\r\n            style={{ backgroundColor: 'royalblue' }}\r\n            >\r\n              Save a Payment Method\r\n            </StyledButton>\r\n          </Link>\r\n          <br />\r\n          \r\n          <br />\r\n          {\r\n            (updatedProfile ||\r\n            fetchedUser && fetchedUser.given_name && fetchedUser.family_name &&\r\n            (fetchedUser.user_metadata?.mobile ? fetchedUser.user_metadata.mobile : null))\r\n            ?\r\n              <Link to='/checkout'>\r\n                <StyledButton\r\n                  onClick={() => setDrawerOpen(false)}\r\n                  style={{ backgroundColor: 'royalblue' }}\r\n                >\r\n                  Enroll in Classes\r\n                </StyledButton>\r\n              </Link>\r\n            :\r\n              <GreyedOutButton\r\n                style={{ backgroundColor: '#ccc' }}\r\n              >\r\n                Enroll in Classes\r\n              </GreyedOutButton>\r\n          }\r\n          <br />\r\n\r\n        </div>\r\n      : null\r\n    }\r\n    </>\r\n  )\r\n}\r\n  \r\nfunction DarkenDiv ({ drawerOpen, setDrawerOpen }) {\r\n    return (\r\n        <>\r\n        {\r\n            drawerOpen ?\r\n            <div\r\n            onClick={() => setDrawerOpen(false)}\r\n            className={'bg-darken'}\r\n            style={{\r\n            top: 0,\r\n            left: 0,\r\n            width: '100vw',\r\n            height: '100vh',\r\n            position: 'absolute',\r\n            backgroundColor: 'rgba(0, 0, 0, 0.25)'\r\n            }}\r\n            ></div>\r\n            : null\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport {\r\n    DrawerLeftPanel,\r\n    DarkenDiv\r\n}\r\n","C:\\Users\\EP\\Documents\\stripe-react\\src\\components\\ActionModal.js",["128","129"],"import React from 'react'\r\nimport styled, { css } from 'styled-components'\r\nimport { useLocation, useHistory } from 'react-router-dom'\r\n\r\nconst ModalDiv_SlideIn = styled.div`\r\ncolor: white;\r\npositon: absolute;\r\npadding: 10px 25px;\r\nborder-radius: 3px;\r\nbackground-color: mediumseagreen;\r\nbox-shadow: 1px 1px 2px 2px rgba(0, 0, 0, 0.2);\r\ntransform: translateX(-100vw);\r\ntransition: transform .5s ease-out;\r\n${props => props.slide === 'in' && css`\r\n  transform: translateX(0px);\r\n`}\r\n${props => props.slide === 'out' && css`\r\n  transform: translateX(200vw);\r\n`}\r\n`\r\n\r\nfunction ActionModal ({ doAction, msg, redirectPath, queryTerm, timeout, delayBeforeLeave }) {\r\n\r\n  const location = useLocation()\r\n  const history = useHistory()\r\n  const [modal, setModal] = React.useState(false)\r\n  const [slide, setSlide] = React.useState(null)\r\n  \r\n  React.useEffect(() => {\r\n    if (location) {\r\n      let search = location.search.substr(1, location.search.length)\r\n      let params = search.split('=')\r\n      if (params) {\r\n        let key = params[0]\r\n        let value = params[1]\r\n        if (key && value) {\r\n          console.log(key, value)\r\n          if (key === queryTerm) {\r\n            if (value === 'complete') {\r\n              setModal(true) // maybe replace this with react toast lib\r\n              setTimeout(() => setSlide('in'), 50)\r\n              setTimeout(() => {\r\n                setSlide('out')\r\n              }, delayBeforeLeave)\r\n              setTimeout(() => {\r\n                if (redirectPath) {\r\n                  history.push(redirectPath)\r\n                }\r\n                doAction()\r\n                setModal(false)\r\n              }, timeout)\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }, [location])\r\n  \r\n  return (\r\n    <>\r\n    {\r\n      modal ?\r\n        <>\r\n            <ModalDiv_SlideIn slide={ slide }>\r\n              {msg}\r\n            </ModalDiv_SlideIn>\r\n        </>\r\n      :\r\n        <></>\r\n    }\r\n    </>\r\n  )\r\n}\r\n\r\nexport { ActionModal }","C:\\Users\\EP\\Documents\\stripe-react\\src\\components\\AppHeader.js",[],"C:\\Users\\EP\\Documents\\stripe-react\\src\\components\\ProfileDataPage.js",[],"C:\\Users\\EP\\Documents\\stripe-react\\src\\components\\BugerButton.js",["130"],"import React from 'react'\r\nimport StyledButton from './StyledButton'\r\n\r\nexport default ({ doAction }) => (\r\n    <StyledButton\r\n    onClick={doAction}\r\n    style={{ position: 'absolute', left: '14px', top: '7px', width: '50px', fontSize: '24px' }}\r\n    >\r\n      &equiv;\r\n    </StyledButton>\r\n)\r\n","C:\\Users\\EP\\Documents\\stripe-react\\src\\components\\LogoutTimer.js",["131","132"],"import React from 'react'\r\nimport { useAuth0 } from '@auth0/auth0-react'\r\n\r\nexport default function LogoutTimer ({ minutesOfInactivity }) {\r\n\r\n    const { isAuthenticated, logout } = useAuth0()\r\n    const minutes = React.useRef(minutesOfInactivity)\r\n    const seconds = React.useRef(0)\r\n    const timeout = React.useRef(() => setTOut(minutes.current))\r\n    const interval = React.useRef(() => setCountdown(minutes.current))\r\n\r\n    const setTOut = () => {\r\n        // console.log(`logout timeout refreshed, set at ${minutes.current} minute${minutes.current > 1 ? 's' : ''}`)\r\n        return setTimeout(() => {\r\n            console.log(`logging out due to ${minutes.current} of inactivity`)\r\n            // also remove the jwt token from localStorage\r\n            if (localStorage.getItem('gym-app-jwt')) {\r\n                localStorage.removeItem('gym-app-jwt')\r\n            }\r\n            logout({ redirectTo: window.location.origin })\r\n        }, ((1000 * 60) * minutes.current))\r\n    }\r\n\r\n    const setCountdown = () => {\r\n        seconds.current = minutes.current * 60\r\n        return setInterval(() => {\r\n            seconds.current = seconds.current - 1\r\n            let sec = seconds.current % 60\r\n            // console.log(`timer: ${((seconds.current - (seconds.current % 60)) / 60)}:${sec < 10 ? `0${sec}` : sec}`)\r\n        }, 1000)\r\n    }\r\n\r\n    React.useEffect(() => {\r\n\r\n        const mouseMoveHandler = () => {\r\n            if (timeout?.current && interval?.current) {\r\n                clearTimeout(timeout.current)\r\n                clearInterval(interval.current)\r\n            }\r\n            timeout.current = setTOut()\r\n            interval.current = setCountdown()   \r\n        }\r\n\r\n        if (isAuthenticated === true) {\r\n            console.log('authenticated, set a timer to logout automagically, but refresh upon mouse movement')\r\n            window.addEventListener('mousemove', mouseMoveHandler)\r\n            mouseMoveHandler() // fire once to init logout timer\r\n        }\r\n\r\n        return () => {\r\n            window.removeEventListener('mousemove', mouseMoveHandler)\r\n        }\r\n\r\n    }, [isAuthenticated])\r\n\r\n    return <></>\r\n\r\n}","C:\\Users\\EP\\Documents\\stripe-react\\src\\components\\CreditCardEntry.js",[],["133","134"],"C:\\Users\\EP\\Documents\\stripe-react\\src\\hooks\\useCreateStripeCustomer.js",["135"],"import React from 'react'\r\nimport { useAuth0 } from '@auth0/auth0-react'\r\nimport useAuthToken from './useAuthToken'\r\n\r\nexport default function useCreateStripeCustomer () {\r\n  \r\n  const { user } = useAuth0()\r\n  const [stripeCustomer, setStripeCustomer] = React.useState(null)\r\n  const jwt = useAuthToken()\r\n\r\n  React.useEffect(() => {\r\n\r\n    if (stripeCustomer) { // once we have both the stripeCustomer and jwt deps.. do..\r\n      // patch stripe customer through to auth0 user \r\n      \r\n      console.log('stripe customer created')\r\n\r\n      if (jwt) {\r\n        \r\n        let status, statusCode\r\n        fetch(`https://gymwebapp.us.auth0.com/api/v2/users/${user.sub}`, {\r\n            method: 'PATCH',\r\n            body: JSON.stringify({\r\n              user_metadata: {\r\n                stripe: {\r\n                  customer: stripeCustomer\r\n                }\r\n              }\r\n            }),\r\n            headers: {\r\n              'content-type': 'application/json',\r\n              'authorization': `Bearer ${jwt.access_token}`\r\n            }\r\n        })\r\n        .then(response => {\r\n          status = response.status\r\n          return response.json()\r\n        })\r\n        .then(data => {\r\n          console.log(data)\r\n          statusCode = data.statusCode ? data.statusCode : null\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n            if (status === 401 || statusCode === 401) {\r\n              if (localStorage.getItem('gym-app-jwt')) {\r\n                localStorage.removeItem('gym-app-jwt')\r\n              }\r\n            }\r\n        })\r\n      }\r\n\r\n    }\r\n\r\n  }, [stripeCustomer, jwt]) // on stripeCustomer or jwt state change.. do..\r\n\r\n  React.useEffect(() => {\r\n\r\n    if (user) {\r\n      console.log(user)\r\n      console.log(\r\n        user.email\r\n      )\r\n\r\n      console.log('hook should create stripe customer')\r\n\r\n      fetch('/create-stripe-customer', {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n          // email: user.email ? user.email : user.name\r\n          email: user.email\r\n        }),\r\n        headers: {\r\n          'Content-type': 'application/json'\r\n        }\r\n      })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        if (data.value === true) { // if we created a new Stripe customer\r\n          console.log(data)\r\n          let { customer } = data\r\n          setStripeCustomer(customer) // save the stripe api data to auth0 user\r\n        }\r\n      })\r\n      .catch(err => console.log(err))\r\n    }\r\n\r\n  }, [user])\r\n\r\n}","C:\\Users\\EP\\Documents\\stripe-react\\src\\components\\StripeCardEntryExample.js",["136","137","138","139","140","141"],"C:\\Users\\EP\\Documents\\stripe-react\\src\\components\\ChoosePaymentMethod.js",[],{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","severity":1,"message":"147","line":11,"column":8,"nodeType":"148","messageId":"149","endLine":11,"endColumn":16},{"ruleId":"150","severity":1,"message":"151","line":1,"column":1,"nodeType":"152","endLine":122,"endColumn":3},{"ruleId":"142","replacedBy":"153"},{"ruleId":"144","replacedBy":"154"},{"ruleId":"150","severity":1,"message":"151","line":1,"column":1,"nodeType":"152","endLine":3,"endColumn":3},{"ruleId":"146","severity":1,"message":"155","line":87,"column":21,"nodeType":"148","messageId":"149","endLine":87,"endColumn":25},{"ruleId":"156","severity":1,"message":"157","line":104,"column":8,"nodeType":"158","endLine":104,"endColumn":27,"suggestions":"159"},{"ruleId":"150","severity":1,"message":"151","line":35,"column":1,"nodeType":"152","endLine":66,"endColumn":2},{"ruleId":"160","severity":1,"message":"161","line":60,"column":13,"nodeType":"162","endLine":63,"endColumn":15},{"ruleId":"146","severity":1,"message":"163","line":10,"column":7,"nodeType":"148","messageId":"149","endLine":10,"endColumn":20},{"ruleId":"164","severity":1,"message":"165","line":76,"column":36,"nodeType":"166","messageId":"167","endLine":76,"endColumn":38},{"ruleId":"142","replacedBy":"168"},{"ruleId":"144","replacedBy":"169"},{"ruleId":"156","severity":1,"message":"170","line":36,"column":8,"nodeType":"158","endLine":36,"endColumn":25,"suggestions":"171"},{"ruleId":"172","severity":1,"message":"173","line":98,"column":29,"nodeType":"174","messageId":"175","endLine":98,"endColumn":31},{"ruleId":"172","severity":1,"message":"173","line":99,"column":78,"nodeType":"174","messageId":"175","endLine":99,"endColumn":80},{"ruleId":"156","severity":1,"message":"176","line":57,"column":6,"nodeType":"158","endLine":57,"endColumn":16,"suggestions":"177"},{"ruleId":"178","severity":1,"message":"179","line":64,"column":13,"nodeType":"162","endLine":64,"endColumn":47},{"ruleId":"150","severity":1,"message":"151","line":4,"column":1,"nodeType":"152","endLine":11,"endColumn":2},{"ruleId":"146","severity":1,"message":"180","line":28,"column":17,"nodeType":"148","messageId":"149","endLine":28,"endColumn":20},{"ruleId":"156","severity":1,"message":"181","line":54,"column":8,"nodeType":"158","endLine":54,"endColumn":25,"suggestions":"182"},{"ruleId":"142","replacedBy":"183"},{"ruleId":"144","replacedBy":"184"},{"ruleId":"156","severity":1,"message":"185","line":55,"column":6,"nodeType":"158","endLine":55,"endColumn":27,"suggestions":"186"},{"ruleId":"146","severity":1,"message":"187","line":2,"column":23,"nodeType":"148","messageId":"149","endLine":2,"endColumn":31},{"ruleId":"146","severity":1,"message":"188","line":7,"column":10,"nodeType":"148","messageId":"149","endLine":7,"endColumn":13},{"ruleId":"146","severity":1,"message":"189","line":111,"column":10,"nodeType":"148","messageId":"149","endLine":111,"endColumn":25},{"ruleId":"146","severity":1,"message":"190","line":111,"column":27,"nodeType":"148","messageId":"149","endLine":111,"endColumn":45},{"ruleId":"156","severity":1,"message":"191","line":182,"column":6,"nodeType":"158","endLine":182,"endColumn":21,"suggestions":"192"},{"ruleId":"146","severity":1,"message":"193","line":406,"column":7,"nodeType":"148","messageId":"149","endLine":406,"endColumn":23},"no-native-reassign",["194"],"no-negated-in-lhs",["195"],"no-unused-vars","'Checkout' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["194"],["195"],"'data' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'history' and 'location.search'. Either include them or remove the dependency array.","ArrayExpression",["196"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'stripePromise' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["194"],["195"],"React Hook React.useEffect has a missing dependency: 'jwt'. Either include it or remove the dependency array.",["197"],"no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","React Hook React.useEffect has missing dependencies: 'delayBeforeLeave', 'doAction', 'history', 'queryTerm', 'redirectPath', and 'timeout'. Either include them or remove the dependency array. If 'doAction' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["198"],"react/jsx-pascal-case","Imported JSX component ModalDiv_SlideIn must be in PascalCase or SCREAMING_SNAKE_CASE","'sec' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'setTOut'. Either include it or remove the dependency array.",["199"],["194"],["195"],"React Hook React.useEffect has a missing dependency: 'user.sub'. Either include it or remove the dependency array.",["200"],"'Elements' is defined but never used.","'set' is defined but never used.","'pmtMethodResult' is assigned a value but never used.","'setPmtMethodResult' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["201"],"'ELEMENTS_OPTIONS' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"202","fix":"203"},{"desc":"204","fix":"205"},{"desc":"206","fix":"207"},{"desc":"208","fix":"209"},{"desc":"210","fix":"211"},{"desc":"212","fix":"213"},"Update the dependencies array to be: [history, isAuthenticated, location.search]",{"range":"214","text":"215"},"Update the dependencies array to be: [isAuthenticated, jwt]",{"range":"216","text":"217"},"Update the dependencies array to be: [delayBeforeLeave, doAction, history, location, queryTerm, redirectPath, timeout]",{"range":"218","text":"219"},"Update the dependencies array to be: [isAuthenticated, setTOut]",{"range":"220","text":"221"},"Update the dependencies array to be: [stripeCustomer, jwt, user.sub]",{"range":"222","text":"223"},"Update the dependencies array to be: [history, paymentMethod]",{"range":"224","text":"225"},[3736,3755],"[history, isAuthenticated, location.search]",[1431,1448],"[isAuthenticated, jwt]",[1725,1735],"[delayBeforeLeave, doAction, history, location, queryTerm, redirectPath, timeout]",[2113,2130],"[isAuthenticated, setTOut]",[1593,1614],"[stripeCustomer, jwt, user.sub]",[5731,5746],"[history, paymentMethod]"]